services:
  db:
    image: postgres:12
    container_name: rbf_db
    restart: always
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}

  bot:
    image: '${DOCKER_IMAGE?Variable not set}:${TAG-latest}'
    container_name: rbf_bot
    restart: always
    networks:
      - default
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - BOT_TOKEN=${BOT_TOKEN?Variable not set}
      - POSTGRES_SERVER=db
      - ADMIN_CHAT_ID=${ADMIN_CHAT_ID?Variable not set}
      - DEVELOPER_CHAT_ID=${DEVELOPER_CHAT_ID?Variable not set}
      - CLAN_CHAT_ID=${CLAN_CHAT_ID?Variable not set}
      - SQLALCHEMY_ECHO=${SQLALCHEMY_ECHO-false}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
    volumes:
      - ./app:/app/app
    build:
      context: .
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    platform: linux/amd64
    command: app/scripts/start.sh
volumes:
  app-db-data:
